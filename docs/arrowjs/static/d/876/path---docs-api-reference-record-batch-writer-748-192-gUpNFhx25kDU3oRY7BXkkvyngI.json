{"data":{"docBySlug":{"html":"<h2 id=\"recordbatchwriter\"><a href=\"#recordbatchwriter\" aria-label=\"recordbatchwriter permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RecordBatchWriter</h2>\n<p>The <code class=\"language-text\">RecordBatchWriter</code> \"serializes\" Arrow Tables (or streams of RecordBatches) to the Arrow File, Stream, or JSON representations for inter-process communication (see also: <a href=\"https://arrow.apache.org/docs/format/IPC.html#streaming-format\">Arrow IPC format docs</a>).</p>\n<p>The RecordBatchWriter is conceptually a \"transform\" stream that transforms Tables or RecordBatches into binary <code class=\"language-text\">Uint8Array</code> chunks that represent the Arrow IPC messages (<code class=\"language-text\">Schema</code>, <code class=\"language-text\">DictionaryBatch</code>, <code class=\"language-text\">RecordBatch</code>, and in the case of the File format, <code class=\"language-text\">Footer</code> messages).</p>\n<p>These binary chunks are buffered inside the <code class=\"language-text\">RecordBatchWriter</code> instance until they are consumed, typically by piping the RecordBatchWriter instance to a Writable Stream (like a file or socket), enumerating the chunks via async-iteration, or by calling <code class=\"language-text\">toUint8Array()</code> to create a single contiguous buffer of the concatenated results once the desired Tables or RecordBatches have been written.</p>\n<p>RecordBatchWriter conforms to the <code class=\"language-text\">AsyncIterableIterator</code> protocol in all environments, and supports two additional stream primitives based on the environment (nodejs or browsers) available at runtime.</p>\n<ul>\n<li>In nodejs, the <code class=\"language-text\">RecordBatchWriter</code> can be converted to a <code class=\"language-text\">ReadableStream</code>, piped to a <code class=\"language-text\">WritableStream</code>, and has a static method that returns a <code class=\"language-text\">TransformStream</code> suitable in chained <code class=\"language-text\">pipe</code> calls.</li>\n<li>browser environments that support the <a href=\"https://github.com/whatwg/streams\">DOM/WhatWG Streams Standard</a>, corresponding methods exist to convert <code class=\"language-text\">RecordBatchWriters</code> to the DOM <code class=\"language-text\">ReadableStream</code>, <code class=\"language-text\">WritableStream</code>, and <code class=\"language-text\">TransformStream</code> variants.</li>\n</ul>\n<p><em>Note</em>: The Arrow JSON representation is not suitable as an IPC mechanism in real-world scenarios. It is used inside the Arrow project as a human-readable debugging tool and for validating interoperability between each language's separate implementation of the Arrow library.</p>\n<h2 id=\"member-fields\"><a href=\"#member-fields\" aria-label=\"member fields permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Member Fields</h2>\n<p>closed: Promise (readonly)</p>\n<p>A Promise which resolves when this <code class=\"language-text\">RecordBatchWriter</code> is closed.</p>\n<h2 id=\"static-methods\"><a href=\"#static-methods\" aria-label=\"static methods permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Static Methods</h2>\n<h3 id=\"recordbatchwriterthroughnodeoptions-object-duplexstream\"><a href=\"#recordbatchwriterthroughnodeoptions-object-duplexstream\" aria-label=\"recordbatchwriterthroughnodeoptions object duplexstream permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RecordBatchWriter.throughNode(options?: Object): DuplexStream</h3>\n<p>Creates a Node.js <code class=\"language-text\">TransformStream</code> that transforms an input <code class=\"language-text\">ReadableStream</code> of Tables or RecordBatches into a stream of <code class=\"language-text\">Uint8Array</code> Arrow Message chunks.</p>\n<ul>\n<li><code class=\"language-text\">options.autoDestroy</code>: boolean - (default: <code class=\"language-text\">true</code>) Indicates whether the RecordBatchWriter should close after writing the first logical stream of RecordBatches (batches which all share the same Schema), or should continue and reset each time it encounters a new Schema.</li>\n<li><code class=\"language-text\">options.*</code> - Any Node Duplex stream options can be supplied</li>\n</ul>\n<p>Returns: A Node.js Duplex stream</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> PassThrough<span class=\"token punctuation\">,</span> finished <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'stream'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> Table<span class=\"token punctuation\">,</span> RecordBatchWriter <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'apache-arrow'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> table <span class=\"token operator\">=</span> Table<span class=\"token punctuation\">.</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    i32<span class=\"token punctuation\">:</span> Int32Vector<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    f32<span class=\"token punctuation\">:</span> Float32Vector<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> source <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PassThrough</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> objectMode<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> source\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>RecordBatchWriter<span class=\"token punctuation\">.</span><span class=\"token function\">throughNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">createWriteStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">'table.arrow'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nsource<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsource<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">finished</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'done writing table.arrow'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"recordbatchwriterthroughdomwritablestrategy--object-readablestrategy--object--object\"><a href=\"#recordbatchwriterthroughdomwritablestrategy--object-readablestrategy--object--object\" aria-label=\"recordbatchwriterthroughdomwritablestrategy  object readablestrategy  object  object permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RecordBatchWriter.throughDOM(writableStrategy? : Object, readableStrategy? : Object) : Object</h3>\n<p>Creates a DOM/WhatWG <code class=\"language-text\">ReadableStream</code>/<code class=\"language-text\">WritableStream</code> pair that together transforms an input <code class=\"language-text\">ReadableStream</code> of Tables or RecordBatches into a stream of <code class=\"language-text\">Uint8Array</code> Arrow Message chunks.</p>\n<ul>\n<li><code class=\"language-text\">options.autoDestroy</code>: boolean - (default: <code class=\"language-text\">true</code>) Indicates whether the RecordBatchWriter should close after writing the first logical stream of RecordBatches (batches which all share the same Schema), or should continue and reset each time it encounters a new Schema.</li>\n<li><code class=\"language-text\">writableStrategy.*</code>= - Any options for QueuingStrategy&#x3C;RecordBatch></li>\n<li><code class=\"language-text\">readableStrategy.highWaterMark</code>? : Number</li>\n<li><code class=\"language-text\">readableStrategy.size</code>?: Number</li>\n</ul>\n<p>Returns: an object with the following fields:</p>\n<ul>\n<li><code class=\"language-text\">writable</code>: WritableStream&#x3C;Table | RecordBatch></li>\n<li><code class=\"language-text\">readable</code>: ReadableStream&#x3C;Uint8Array></li>\n</ul>\n<h2 id=\"methods\"><a href=\"#methods\" aria-label=\"methods permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Methods</h2>\n<p>constructor(options? : Object)</p>\n<ul>\n<li><code class=\"language-text\">options.autoDestroy</code>: boolean -</li>\n</ul>\n<h3 id=\"tostringsync-boolean-string--promisestring\"><a href=\"#tostringsync-boolean-string--promisestring\" aria-label=\"tostringsync boolean string  promisestring permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>toString(sync: Boolean): string | Promise<string></h3>\n<h3 id=\"touint8arraysync-boolean-uint8array--promiseuint8array\"><a href=\"#touint8arraysync-boolean-uint8array--promiseuint8array\" aria-label=\"touint8arraysync boolean uint8array  promiseuint8array permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>toUint8Array(sync: Boolean): Uint8Array | Promise<Uint8Array></h3>\n<h3 id=\"writeallinput-table--iterablerecordbatch-this\"><a href=\"#writeallinput-table--iterablerecordbatch-this\" aria-label=\"writeallinput table  iterablerecordbatch this permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>writeAll(input: Table | Iterable<RecordBatch>): this</h3>\n<h3 id=\"writeallinput-asynciterablerecordbatch-promisethis\"><a href=\"#writeallinput-asynciterablerecordbatch-promisethis\" aria-label=\"writeallinput asynciterablerecordbatch promisethis permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>writeAll(input: AsyncIterable<RecordBatch>): Promise<this></h3>\n<h3 id=\"writeallinput-promiselikeasynciterablerecordbatch-promisethis\"><a href=\"#writeallinput-promiselikeasynciterablerecordbatch-promisethis\" aria-label=\"writeallinput promiselikeasynciterablerecordbatch promisethis permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>writeAll(input: PromiseLike&#x3C;AsyncIterable<RecordBatch>>): Promise<this></h3>\n<h3 id=\"writeallinput-promiseliketable--iterablerecordbatch-promisethis\"><a href=\"#writeallinput-promiseliketable--iterablerecordbatch-promisethis\" aria-label=\"writeallinput promiseliketable  iterablerecordbatch promisethis permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>writeAll(input: PromiseLike&#x3C;Table | Iterable<RecordBatch>>): Promise<this></h3>\n<ul>\n<li><a href=\"\">Symbol.asyncIterator</a>: AsyncByteQueue<Uint8Array></li>\n</ul>\n<p>Returns An async iterator that produces Uint8Arrays.</p>\n<h3 id=\"todomstreamoptions-object-readablestreamuint8array\"><a href=\"#todomstreamoptions-object-readablestreamuint8array\" aria-label=\"todomstreamoptions object readablestreamuint8array permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>toDOMStream(options?: Object): ReadableStream<Uint8Array></h3>\n<p>Returns a new DOM/WhatWG stream that can be used to read the Uint8Array chunks produced by the RecordBatchWriter</p>\n<ul>\n<li><code class=\"language-text\">options</code> - passed through to the DOM ReadableStream constructor, any DOM ReadableStream options.</li>\n</ul>\n<h3 id=\"tonodestreamoptions-object-readable\"><a href=\"#tonodestreamoptions-object-readable\" aria-label=\"tonodestreamoptions object readable permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>toNodeStream(options?: Object): Readable</h3>\n<ul>\n<li><code class=\"language-text\">options</code> - passed through to the Node ReadableStream constructor, any Node ReadableStream options.</li>\n</ul>\n<h3 id=\"close--void\"><a href=\"#close--void\" aria-label=\"close  void permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>close() : void</h3>\n<p>Close the RecordBatchWriter. After close is called, no more chunks can be written.</p>\n<h3 id=\"abortreason-any--void\"><a href=\"#abortreason-any--void\" aria-label=\"abortreason any  void permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>abort(reason?: any) : void</h3>\n<h3 id=\"finish--this\"><a href=\"#finish--this\" aria-label=\"finish  this permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>finish() : this</h3>\n<h3 id=\"resetsink-writablesinkarraybufferviewinput-schema-schema--null-this\"><a href=\"#resetsink-writablesinkarraybufferviewinput-schema-schema--null-this\" aria-label=\"resetsink writablesinkarraybufferviewinput schema schema  null this permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>reset(sink?: WritableSink<ArrayBufferViewInput>, schema?: Schema | null): this</h3>\n<p>Change the sink</p>\n<h3 id=\"writepayload-table--recordbatch--iterabletable--iterablerecordbatch--null-void\"><a href=\"#writepayload-table--recordbatch--iterabletable--iterablerecordbatch--null-void\" aria-label=\"writepayload table  recordbatch  iterabletable  iterablerecordbatch  null void permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>write(payload?: Table | RecordBatch | Iterable<Table> | Iterable<RecordBatch> | null): void</h3>\n<p>Writes a <code class=\"language-text\">RecordBatch</code> or all the RecordBatches from a <code class=\"language-text\">Table</code>.</p>\n<h2 id=\"remarks\"><a href=\"#remarks\" aria-label=\"remarks permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Remarks</h2>\n<ul>\n<li>Just like the <code class=\"language-text\">RecordBatchReader</code>, a <code class=\"language-text\">RecordBatchWriter</code> is a factory base class that returns an instance of the subclass appropriate to the situation: <code class=\"language-text\">RecordBatchStreamWriter</code>, <code class=\"language-text\">RecordBatchFileWriter</code>, <code class=\"language-text\">RecordBatchJSONWriter</code></li>\n</ul>","timeToRead":5,"excerpt":"RecordBatchWriter The   \"serializes\" Arrow Tables (or streams of RecordBatches) to the Arrow File, Stream, or JSON representations for inter…","frontmatter":{"title":" RecordBatchWriter","cover":"cover","category":"docs","tags":["default"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"relativeLinks":{"../../README.md":"/docs","arrow/docs/README.md":"/docs","../..":"/docs","docs":"/docs","../../whats-new.md":"/docs/whats-new","arrow/docs/whats-new.md":"/docs/whats-new","../../whats-new":"/docs/whats-new","docs/whats-new":"/docs/whats-new","../../roadmap.md":"/docs/roadmap","arrow/docs/roadmap.md":"/docs/roadmap","../../roadmap":"/docs/roadmap","docs/roadmap":"/docs/roadmap","../../notes.md":"/docs/notes","arrow/docs/notes.md":"/docs/notes","../../notes":"/docs/notes","docs/notes":"/docs/notes","../../developer-guide/README.md":"/docs/developer-guide","arrow/docs/developer-guide/README.md":"/docs/developer-guide","../../developer-guide":"/docs/developer-guide","docs/developer-guide":"/docs/developer-guide","../../developer-guide/big-ints.md":"/docs/developer-guide/big-ints","arrow/docs/developer-guide/big-ints.md":"/docs/developer-guide/big-ints","../../developer-guide/big-ints":"/docs/developer-guide/big-ints","docs/developer-guide/big-ints":"/docs/developer-guide/big-ints","../../developer-guide/converting-data.md":"/docs/developer-guide/converting-data","arrow/docs/developer-guide/converting-data.md":"/docs/developer-guide/converting-data","../../developer-guide/converting-data":"/docs/developer-guide/converting-data","docs/developer-guide/converting-data":"/docs/developer-guide/converting-data","../../developer-guide/data-types.md":"/docs/developer-guide/data-types","arrow/docs/developer-guide/data-types.md":"/docs/developer-guide/data-types","../../developer-guide/data-types":"/docs/developer-guide/data-types","docs/developer-guide/data-types":"/docs/developer-guide/data-types","../../developer-guide/data-sources.md":"/docs/developer-guide/data-sources","arrow/docs/developer-guide/data-sources.md":"/docs/developer-guide/data-sources","../../developer-guide/data-sources":"/docs/developer-guide/data-sources","docs/developer-guide/data-sources":"/docs/developer-guide/data-sources","../../developer-guide/getting-started.md":"/docs/developer-guide/getting-started","arrow/docs/developer-guide/getting-started.md":"/docs/developer-guide/getting-started","../../developer-guide/getting-started":"/docs/developer-guide/getting-started","docs/developer-guide/getting-started":"/docs/developer-guide/getting-started","../../developer-guide/memory-management.md":"/docs/developer-guide/memory-management","arrow/docs/developer-guide/memory-management.md":"/docs/developer-guide/memory-management","../../developer-guide/memory-management":"/docs/developer-guide/memory-management","docs/developer-guide/memory-management":"/docs/developer-guide/memory-management","../../developer-guide/predicates.md":"/docs/developer-guide/predicates","arrow/docs/developer-guide/predicates.md":"/docs/developer-guide/predicates","../../developer-guide/predicates":"/docs/developer-guide/predicates","docs/developer-guide/predicates":"/docs/developer-guide/predicates","../../developer-guide/reading-and-writing.md":"/docs/developer-guide/reading-and-writing","arrow/docs/developer-guide/reading-and-writing.md":"/docs/developer-guide/reading-and-writing","../../developer-guide/reading-and-writing":"/docs/developer-guide/reading-and-writing","docs/developer-guide/reading-and-writing":"/docs/developer-guide/reading-and-writing","../../developer-guide/tables.md":"/docs/developer-guide/tables","arrow/docs/developer-guide/tables.md":"/docs/developer-guide/tables","../../developer-guide/tables":"/docs/developer-guide/tables","docs/developer-guide/tables":"/docs/developer-guide/tables","../../developer-guide/typescript.md":"/docs/developer-guide/typescript","arrow/docs/developer-guide/typescript.md":"/docs/developer-guide/typescript","../../developer-guide/typescript":"/docs/developer-guide/typescript","docs/developer-guide/typescript":"/docs/developer-guide/typescript","../README.md":"/docs/api-reference","arrow/docs/api-reference/README.md":"/docs/api-reference","..":"/docs/api-reference","docs/api-reference":"/docs/api-reference","../column.md":"/docs/api-reference/column","arrow/docs/api-reference/column.md":"/docs/api-reference/column","../column":"/docs/api-reference/column","docs/api-reference/column":"/docs/api-reference/column","../../developer-guide/data-frame-operations.md":"/docs/developer-guide/data-frame-operations","arrow/docs/developer-guide/data-frame-operations.md":"/docs/developer-guide/data-frame-operations","../../developer-guide/data-frame-operations":"/docs/developer-guide/data-frame-operations","docs/developer-guide/data-frame-operations":"/docs/developer-guide/data-frame-operations","../data-frame.md":"/docs/api-reference/data-frame","arrow/docs/api-reference/data-frame.md":"/docs/api-reference/data-frame","../data-frame":"/docs/api-reference/data-frame","docs/api-reference/data-frame":"/docs/api-reference/data-frame","../predicates.md":"/docs/api-reference/predicates","arrow/docs/api-reference/predicates.md":"/docs/api-reference/predicates","../predicates":"/docs/api-reference/predicates","docs/api-reference/predicates":"/docs/api-reference/predicates","../dictionary.md":"/docs/api-reference/dictionary","arrow/docs/api-reference/dictionary.md":"/docs/api-reference/dictionary","../dictionary":"/docs/api-reference/dictionary","docs/api-reference/dictionary":"/docs/api-reference/dictionary","../record-batch-reader.md":"/docs/api-reference/record-batch-reader","arrow/docs/api-reference/record-batch-reader.md":"/docs/api-reference/record-batch-reader","../record-batch-reader":"/docs/api-reference/record-batch-reader","docs/api-reference/record-batch-reader":"/docs/api-reference/record-batch-reader","../field.md":"/docs/api-reference/field","arrow/docs/api-reference/field.md":"/docs/api-reference/field","../field":"/docs/api-reference/field","docs/api-reference/field":"/docs/api-reference/field","../row.md":"/docs/api-reference/row","arrow/docs/api-reference/row.md":"/docs/api-reference/row","../row":"/docs/api-reference/row","docs/api-reference/row":"/docs/api-reference/row","../data.md":"/docs/api-reference/data","arrow/docs/api-reference/data.md":"/docs/api-reference/data","../data":"/docs/api-reference/data","docs/api-reference/data":"/docs/api-reference/data","../record-batch.md":"/docs/api-reference/record-batch","arrow/docs/api-reference/record-batch.md":"/docs/api-reference/record-batch","../record-batch":"/docs/api-reference/record-batch","docs/api-reference/record-batch":"/docs/api-reference/record-batch","../schema.md":"/docs/api-reference/schema","arrow/docs/api-reference/schema.md":"/docs/api-reference/schema","../schema":"/docs/api-reference/schema","docs/api-reference/schema":"/docs/api-reference/schema","../struct-vector.md":"/docs/api-reference/struct-vector","arrow/docs/api-reference/struct-vector.md":"/docs/api-reference/struct-vector","../struct-vector":"/docs/api-reference/struct-vector","docs/api-reference/struct-vector":"/docs/api-reference/struct-vector","../types.md":"/docs/api-reference/types","arrow/docs/api-reference/types.md":"/docs/api-reference/types","../types":"/docs/api-reference/types","docs/api-reference/types":"/docs/api-reference/types","../vector.md":"/docs/api-reference/vector","arrow/docs/api-reference/vector.md":"/docs/api-reference/vector","../vector":"/docs/api-reference/vector","docs/api-reference/vector":"/docs/api-reference/vector","":"/docs/api-reference/record-batch-writer","arrow/docs/api-reference/record-batch-writer.md":"/docs/api-reference/record-batch-writer","docs/api-reference/record-batch-writer":"/docs/api-reference/record-batch-writer","../table.md":"/docs/api-reference/table","arrow/docs/api-reference/table.md":"/docs/api-reference/table","../table":"/docs/api-reference/table","docs/api-reference/table":"/docs/api-reference/table","../vectors.md":"/docs/api-reference/vectors","arrow/docs/api-reference/vectors.md":"/docs/api-reference/vectors","../vectors":"/docs/api-reference/vectors","docs/api-reference/vectors":"/docs/api-reference/vectors","../chunked.md":"/docs/api-reference/chunked","arrow/docs/api-reference/chunked.md":"/docs/api-reference/chunked","../chunked":"/docs/api-reference/chunked","docs/api-reference/chunked":"/docs/api-reference/chunked"},"slug":"docs/api-reference/record-batch-writer","toc":"docs"}}