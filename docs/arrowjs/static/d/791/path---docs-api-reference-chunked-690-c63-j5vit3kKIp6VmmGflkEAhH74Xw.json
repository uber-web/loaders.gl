{"data":{"docBySlug":{"html":"<h1 id=\"chunked\"><a href=\"#chunked\" aria-label=\"chunked permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Chunked</h1>\n<p>Holds a \"chunked array\" that allows a number of array fragments (represented by <code class=\"language-text\">Vector</code> instances) to be treated logically as a single vector. <code class=\"language-text\">Vector</code> instances can be concatenated into a <code class=\"language-text\">Chunked</code> without any memory beind copied.</p>\n<h2 id=\"usage\"><a href=\"#usage\" aria-label=\"usage permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usage</h2>\n<p>Create a new contiguous typed array from a <code class=\"language-text\">Chunked</code> instance (note that this creates a new typed array unless only one chunk)</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> typedArray <span class=\"token operator\">=</span> chunked<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>A <code class=\"language-text\">Chunked</code> array supports iteration, random element access and mutation.</p>\n<h2 id=\"inheritance\"><a href=\"#inheritance\" aria-label=\"inheritance permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Inheritance</h2>\n<p>class Chunked extends <a href=\"docs-arrow/api-reference/vector.md\">Vector</a></p>\n<h2 id=\"static-methods\"><a href=\"#static-methods\" aria-label=\"static methods permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Static Methods</h2>\n<h3 id=\"chunkedflattenvectors-vector--vector\"><a href=\"#chunkedflattenvectors-vector--vector\" aria-label=\"chunkedflattenvectors vector  vector permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Chunked.flatten(...vectors: Vector[]) : Vector</h3>\n<p class=\"badges\">\n   <img src=\"https://img.shields.io/badge/zero-copy-green.svg?style=flat-square\" alt=\"zero-copy\">\n</p>\n<p>Utility method that flattens a number of <code class=\"language-text\">Vector</code> instances or Arrays of <code class=\"language-text\">Vector</code> instances into a single Array of <code class=\"language-text\">Vector</code> instances. If the incoming Vectors are instances of <code class=\"language-text\">Chunked</code>, the child chunks are extracted and flattened into the resulting Array. Does not mutate or copy data from the Vector instances.</p>\n<p>Returns an Array of <code class=\"language-text\">Vector</code> instances.</p>\n<h3 id=\"chunkedconcatchunks-vectort-chunked\"><a href=\"#chunkedconcatchunks-vectort-chunked\" aria-label=\"chunkedconcatchunks vectort chunked permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Chunked.concat(...chunks: Vector<T>[]): Chunked</h3>\n<p class=\"badges\">\n   <img src=\"https://img.shields.io/badge/zero-copy-green.svg?style=flat-square\" alt=\"zero-copy\">\n</p>\n<p>Concatenates a number of <code class=\"language-text\">Vector</code> instances of the same type into a single <code class=\"language-text\">Chunked</code> Vector. Returns a new <code class=\"language-text\">Chunked</code> Vector.</p>\n<p>Note: This method extracts the inner chunks of any incoming <code class=\"language-text\">Chunked</code> instances, and flattens them into the <code class=\"language-text\">chunks</code> array of the returned <code class=\"language-text\">Chunked</code> Vector.</p>\n<h2 id=\"members\"><a href=\"#members\" aria-label=\"members permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Members</h2>\n<h3 id=\"symboliterator--iterator\"><a href=\"#symboliterator--iterator\" aria-label=\"symboliterator  iterator permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"\">Symbol.iterator</a> : Iterator</h3>\n<p><code class=\"language-text\">Chunked</code> arrays are iterable, allowing you to use constructs like <code class=\"language-text\">for (const element of chunked)</code> to iterate over elements. For in-order traversal, this is more performant than random-element access.</p>\n<h3 id=\"type--t\"><a href=\"#type--t\" aria-label=\"type  t permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>type : T</h3>\n<p>Returns the DataType instance which determines the type of elements this <code class=\"language-text\">Chunked</code> instance contains. All vector chunks will have this type.</p>\n<h3 id=\"length-number--read-only\"><a href=\"#length-number--read-only\" aria-label=\"length number  read only permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>length: Number  (read-only)</h3>\n<p>Returns the total number of elements in this <code class=\"language-text\">Chunked</code> instance, representing the length of of all chunks.</p>\n<h3 id=\"chunks-vector--read-only\"><a href=\"#chunks-vector--read-only\" aria-label=\"chunks vector  read only permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>chunks: Vector[]  (read-only)</h3>\n<p>Returns an array of the <code class=\"language-text\">Vector</code> chunks that hold the elements in this <code class=\"language-text\">Chunked</code> array.</p>\n<h3 id=\"typeid--tbd--read-only\"><a href=\"#typeid--tbd--read-only\" aria-label=\"typeid  tbd  read only permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>typeId : TBD  (read-only)</h3>\n<p>The <code class=\"language-text\">typeId</code> enum value of the <code class=\"language-text\">type</code> instance</p>\n<h3 id=\"data--data--read-only\"><a href=\"#data--data--read-only\" aria-label=\"data  data  read only permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>data : Data  (read-only)</h3>\n<p>Returns the <code class=\"language-text\">Data</code> instance of the <em>first</em> chunk in the list of inner Vectors.</p>\n<h3 id=\"arraytype--read-only\"><a href=\"#arraytype--read-only\" aria-label=\"arraytype  read only permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ArrayType  (read-only)</h3>\n<p>Returns the constructor of the underlying typed array for the values buffer as determined by this Vector's DataType.</p>\n<h3 id=\"numchildren--read-only\"><a href=\"#numchildren--read-only\" aria-label=\"numchildren  read only permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>numChildren  (read-only)</h3>\n<p>The number of logical Vector children for the Chunked Vector. Only applicable if the DataType of the Vector is one of the nested types (List, FixedSizeList, Struct, or Map).</p>\n<h3 id=\"stride--read-only\"><a href=\"#stride--read-only\" aria-label=\"stride  read only permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>stride  (read-only)</h3>\n<p>The number of elements in the underlying data buffer that constitute a single logical value for the given type. The stride for all DataTypes is 1 unless noted here:</p>\n<ul>\n<li>For <code class=\"language-text\">Decimal</code> types, the stride is 4.</li>\n<li>For <code class=\"language-text\">Date</code> types, the stride is 1 if the <code class=\"language-text\">unit</code> is DateUnit.DAY, else 2.</li>\n<li>For <code class=\"language-text\">Int</code>, <code class=\"language-text\">Interval</code>, or <code class=\"language-text\">Time</code> types, the stride is 1 if <code class=\"language-text\">bitWidth &lt;= 32</code>, else 2.</li>\n<li>For <code class=\"language-text\">FixedSizeList</code> types, the stride is the <code class=\"language-text\">listSize</code> property of the <code class=\"language-text\">FixedSizeList</code> instance.</li>\n<li>For <code class=\"language-text\">FixedSizeBinary</code> types, the stride is the <code class=\"language-text\">byteWidth</code> property of the <code class=\"language-text\">FixedSizeBinary</code> instance.</li>\n</ul>\n<h3 id=\"nullcount--read-only\"><a href=\"#nullcount--read-only\" aria-label=\"nullcount  read only permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>nullCount  (read-only)</h3>\n<p>Number of null values across all Vector chunks in this chunked array.</p>\n<h3 id=\"indices--chunkedkeyst--null--read-only\"><a href=\"#indices--chunkedkeyst--null--read-only\" aria-label=\"indices  chunkedkeyst  null  read only permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>indices : ChunkedKeys<T> | null  (read-only)</h3>\n<p>If this is a dictionary encoded column, returns a <code class=\"language-text\">Chunked</code> instance of the indicies of all the inner chunks. Otherwise, returns <code class=\"language-text\">null</code>.</p>\n<h3 id=\"dictionary-chunkeddict--null--read-only\"><a href=\"#dictionary-chunkeddict--null--read-only\" aria-label=\"dictionary chunkeddict  null  read only permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>dictionary: ChunkedDict | null  (read-only)</h3>\n<p>If this is a dictionary encoded column, returns the Dictionary.</p>\n<h2 id=\"methods\"><a href=\"#methods\" aria-label=\"methods permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Methods</h2>\n<h3 id=\"constructortype---chunks--vector---offsets--number\"><a href=\"#constructortype---chunks--vector---offsets--number\" aria-label=\"constructortype   chunks  vector   offsets  number permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>constructor(type : *, chunks? : Vector[] = [], offsets? : Number[])</h3>\n<p class=\"badges\">\n   <img src=\"https://img.shields.io/badge/zero-copy-green.svg?style=flat-square\" alt=\"zero-copy\">\n</p>\n<p>Creates a new <code class=\"language-text\">Chunked</code> array instance of the given <code class=\"language-text\">type</code> and optionally initializes it with a list of <code class=\"language-text\">Vector</code> instances.</p>\n<ul>\n<li><code class=\"language-text\">type</code> - The DataType of the inner chunks</li>\n<li><code class=\"language-text\">chunks</code>= - Vectors must all be compatible with <code class=\"language-text\">type</code>.</li>\n<li><code class=\"language-text\">offsets</code>= - A Uint32Array of offsets where each inner chunk starts and ends. If not provided, offsets are automatically calculated from the list of chunks.</li>\n</ul>\n<p>TBD - Confirm/provide some information on how <code class=\"language-text\">offsets</code> can be used?</p>\n<h3 id=\"clonechunks--thischunks-chunked\"><a href=\"#clonechunks--thischunks-chunked\" aria-label=\"clonechunks  thischunks chunked permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>clone(chunks? : this.chunks): Chunked</h3>\n<p class=\"badges\">\n   <img src=\"https://img.shields.io/badge/zero-copy-green.svg?style=flat-square\" alt=\"zero-copy\">\n</p>\n<p>Returns a new <code class=\"language-text\">Chunked</code> instance that is a clone of this instance. Does not copy the actual chunks, so the new <code class=\"language-text\">Chunked</code> instance will reference the same chunks.</p>\n<h3 id=\"concatothers-vectort-chunked\"><a href=\"#concatothers-vectort-chunked\" aria-label=\"concatothers vectort chunked permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>concat(...others: Vector<T>[]): Chunked</h3>\n<p class=\"badges\">\n   <img src=\"https://img.shields.io/badge/zero-copy-green.svg?style=flat-square\" alt=\"zero-copy\">\n</p>\n<p>Concatenates a number of <code class=\"language-text\">Vector</code> instances after the chunks. Returns a new <code class=\"language-text\">Chunked</code> array.</p>\n<p>The supplied <code class=\"language-text\">Vector</code> chunks must be the same DataType as the <code class=\"language-text\">Chunked</code> instance.</p>\n<h3 id=\"slicebegin-number-end-number-chunked\"><a href=\"#slicebegin-number-end-number-chunked\" aria-label=\"slicebegin number end number chunked permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>slice(begin?: Number, end?: Number): Chunked</h3>\n<p>Returns a new chunked array representing the logical array containing the elements within the index range, potentially dropping some chunks at beginning and end.</p>\n<ul>\n<li><code class=\"language-text\">begin</code>=<code class=\"language-text\">0</code> - The first logical index to be included as index 0 in the new array.</li>\n<li><code class=\"language-text\">end</code> - The first logical index to be included as index 0 in the new array. Defaults to the last element in the range.</li>\n</ul>\n<p>Returns a zero-copy slice of this Vector. The begin and end arguments are handled the same way as JS' <code class=\"language-text\">Array.prototype.slice</code>; they are clamped between 0 and <code class=\"language-text\">vector.length</code> and wrap around when negative, e.g. <code class=\"language-text\">slice(-1, 5)</code> or <code class=\"language-text\">slice(5, -1)</code></p>\n<h3 id=\"getchildatindex--number-chunked--null\"><a href=\"#getchildatindex--number-chunked--null\" aria-label=\"getchildatindex  number chunked  null permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>getChildAt(index : Number): Chunked | null</h3>\n<p>If this <code class=\"language-text\">Chunked</code> Vector's DataType is one of the nested types (Map or Struct), returns a <code class=\"language-text\">Chunked</code> Vector view over all the chunks for the child Vector at <code class=\"language-text\">index</code>.</p>\n<h3 id=\"searchindex-number-number-number--null\"><a href=\"#searchindex-number-number-number--null\" aria-label=\"searchindex number number number  null permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>search(index: Number): [number, number] | null;</h3>\n<h3 id=\"searchindex-number-then-searchcontinuation-returntypen\"><a href=\"#searchindex-number-then-searchcontinuation-returntypen\" aria-label=\"searchindex number then searchcontinuation returntypen permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>search(index: Number, then?: SearchContinuation): ReturnType<N>;</h3>\n<h3 id=\"searchindex-number-then-searchcontinuation\"><a href=\"#searchindex-number-then-searchcontinuation\" aria-label=\"searchindex number then searchcontinuation permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>search(index: Number, then?: SearchContinuation)</h3>\n<p>Using an <code class=\"language-text\">index</code> that is relative to the whole <code class=\"language-text\">Chunked</code> Vector, binary search through the list of inner chunks using supplied \"global\" <code class=\"language-text\">index</code> to find the chunk at that location. Returns the child index of the inner chunk and an element index that has been adjusted to the keyspace of the found inner chunk.</p>\n<p><code class=\"language-text\">search()</code> can be called with only an integer index, in which case a pair of <code class=\"language-text\">[chunkIndex, valueIndex]</code> are returned as a two-element Array:</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">let</span> chunked <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    Int32Vector<span class=\"token punctuation\">.</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    Int32Vector<span class=\"token punctuation\">.</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>chunkIndex<span class=\"token punctuation\">,</span> valueIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> chunked<span class=\"token punctuation\">.</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>chunkIndex <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>valueIndex <span class=\"token operator\">===</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>If <code class=\"language-text\">search()</code> is called with an integer index and a callback, the callback will be invoked with the <code class=\"language-text\">Chunked</code> instance as the first argument, then the <code class=\"language-text\">chunkIndex</code> and <code class=\"language-text\">valueIndex</code> as the second and third arguments:</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">let</span> <span class=\"token function-variable function\">getChildValue</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">parent<span class=\"token punctuation\">,</span> childIndex<span class=\"token punctuation\">,</span> valueIndex</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n    chunked<span class=\"token punctuation\">.</span>chunks<span class=\"token punctuation\">[</span>childIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>valueIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> childValue <span class=\"token operator\">=</span> chunked<span class=\"token punctuation\">.</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">chunked<span class=\"token punctuation\">,</span> childIndex<span class=\"token punctuation\">,</span> valueIndex</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"isvalidindex-number-boolean\"><a href=\"#isvalidindex-number-boolean\" aria-label=\"isvalidindex number boolean permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>isValid(index: Number): boolean</h3>\n<p>Checks if the element at <code class=\"language-text\">index</code> in the logical array is valid.</p>\n<p>Checks the null map (if present) to determine if the value in the logical <code class=\"language-text\">index</code> is included.</p>\n<h3 id=\"getindex--number-ttvalue--null\"><a href=\"#getindex--number-ttvalue--null\" aria-label=\"getindex  number ttvalue  null permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>get(index : Number): T['TValue'] | null</h3>\n<p>Returns the element at <code class=\"language-text\">index</code> in the logical array, or <code class=\"language-text\">null</code> if no such element exists (e.e.g if <code class=\"language-text\">index</code> is out of range).</p>\n<h3 id=\"setindex-number-value-ttvalue--null-void\"><a href=\"#setindex-number-value-ttvalue--null-void\" aria-label=\"setindex number value ttvalue  null void permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>set(index: Number, value: T['TValue'] | null): void</h3>\n<p>Writes the given <code class=\"language-text\">value</code> at the provided <code class=\"language-text\">index</code>. If the value is null, the null bitmap is updated.</p>\n<h3 id=\"indexofelement-type-offset-number-number\"><a href=\"#indexofelement-type-offset-number-number\" aria-label=\"indexofelement type offset number number permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>indexOf(element: Type, offset?: Number): Number</h3>\n<p>Returns the index of the first occurrence of <code class=\"language-text\">element</code>, or <code class=\"language-text\">-1</code> if the value was not found.</p>\n<ul>\n<li><code class=\"language-text\">offset</code> - the index to start searching from.</li>\n</ul>\n<h3 id=\"toarray-typedarray\"><a href=\"#toarray-typedarray\" aria-label=\"toarray typedarray permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>toArray(): TypedArray</h3>\n<p>Returns a single contiguous typed array containing data in all the chunks (effectively \"flattening\" the chunks.</p>\n<p>Notes:</p>\n<ul>\n<li>Calling this function creates a new typed array unless there is only one chunk.</li>\n</ul>","timeToRead":7,"excerpt":"Chunked Holds a \"chunked array\" that allows a number of array fragments (represented by   instances) to be treated logically as a single…","frontmatter":{"title":"Chunked","cover":"cover","category":"docs","tags":["default"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"relativeLinks":{"../../README.md":"/docs","arrow/docs/README.md":"/docs","../..":"/docs","docs":"/docs","../../notes.md":"/docs/notes","arrow/docs/notes.md":"/docs/notes","../../notes":"/docs/notes","docs/notes":"/docs/notes","../../roadmap.md":"/docs/roadmap","arrow/docs/roadmap.md":"/docs/roadmap","../../roadmap":"/docs/roadmap","docs/roadmap":"/docs/roadmap","../../whats-new.md":"/docs/whats-new","arrow/docs/whats-new.md":"/docs/whats-new","../../whats-new":"/docs/whats-new","docs/whats-new":"/docs/whats-new","../README.md":"/docs/api-reference","arrow/docs/api-reference/README.md":"/docs/api-reference","..":"/docs/api-reference","docs/api-reference":"/docs/api-reference","../column.md":"/docs/api-reference/column","arrow/docs/api-reference/column.md":"/docs/api-reference/column","../column":"/docs/api-reference/column","docs/api-reference/column":"/docs/api-reference/column","../data-frame.md":"/docs/api-reference/data-frame","arrow/docs/api-reference/data-frame.md":"/docs/api-reference/data-frame","../data-frame":"/docs/api-reference/data-frame","docs/api-reference/data-frame":"/docs/api-reference/data-frame","../data.md":"/docs/api-reference/data","arrow/docs/api-reference/data.md":"/docs/api-reference/data","../data":"/docs/api-reference/data","docs/api-reference/data":"/docs/api-reference/data","../dictionary.md":"/docs/api-reference/dictionary","arrow/docs/api-reference/dictionary.md":"/docs/api-reference/dictionary","../dictionary":"/docs/api-reference/dictionary","docs/api-reference/dictionary":"/docs/api-reference/dictionary","../field.md":"/docs/api-reference/field","arrow/docs/api-reference/field.md":"/docs/api-reference/field","../field":"/docs/api-reference/field","docs/api-reference/field":"/docs/api-reference/field","../predicates.md":"/docs/api-reference/predicates","arrow/docs/api-reference/predicates.md":"/docs/api-reference/predicates","../predicates":"/docs/api-reference/predicates","docs/api-reference/predicates":"/docs/api-reference/predicates","../record-batch-reader.md":"/docs/api-reference/record-batch-reader","arrow/docs/api-reference/record-batch-reader.md":"/docs/api-reference/record-batch-reader","../record-batch-reader":"/docs/api-reference/record-batch-reader","docs/api-reference/record-batch-reader":"/docs/api-reference/record-batch-reader","../record-batch-writer.md":"/docs/api-reference/record-batch-writer","arrow/docs/api-reference/record-batch-writer.md":"/docs/api-reference/record-batch-writer","../record-batch-writer":"/docs/api-reference/record-batch-writer","docs/api-reference/record-batch-writer":"/docs/api-reference/record-batch-writer","../record-batch.md":"/docs/api-reference/record-batch","arrow/docs/api-reference/record-batch.md":"/docs/api-reference/record-batch","../record-batch":"/docs/api-reference/record-batch","docs/api-reference/record-batch":"/docs/api-reference/record-batch","../row.md":"/docs/api-reference/row","arrow/docs/api-reference/row.md":"/docs/api-reference/row","../row":"/docs/api-reference/row","docs/api-reference/row":"/docs/api-reference/row","../struct-vector.md":"/docs/api-reference/struct-vector","arrow/docs/api-reference/struct-vector.md":"/docs/api-reference/struct-vector","../struct-vector":"/docs/api-reference/struct-vector","docs/api-reference/struct-vector":"/docs/api-reference/struct-vector","../schema.md":"/docs/api-reference/schema","arrow/docs/api-reference/schema.md":"/docs/api-reference/schema","../schema":"/docs/api-reference/schema","docs/api-reference/schema":"/docs/api-reference/schema","../table.md":"/docs/api-reference/table","arrow/docs/api-reference/table.md":"/docs/api-reference/table","../table":"/docs/api-reference/table","docs/api-reference/table":"/docs/api-reference/table","../types.md":"/docs/api-reference/types","arrow/docs/api-reference/types.md":"/docs/api-reference/types","../types":"/docs/api-reference/types","docs/api-reference/types":"/docs/api-reference/types","../vector.md":"/docs/api-reference/vector","arrow/docs/api-reference/vector.md":"/docs/api-reference/vector","../vector":"/docs/api-reference/vector","docs/api-reference/vector":"/docs/api-reference/vector","../vectors.md":"/docs/api-reference/vectors","arrow/docs/api-reference/vectors.md":"/docs/api-reference/vectors","../vectors":"/docs/api-reference/vectors","docs/api-reference/vectors":"/docs/api-reference/vectors","../../developer-guide/README.md":"/docs/developer-guide","arrow/docs/developer-guide/README.md":"/docs/developer-guide","../../developer-guide":"/docs/developer-guide","docs/developer-guide":"/docs/developer-guide","../../developer-guide/big-ints.md":"/docs/developer-guide/big-ints","arrow/docs/developer-guide/big-ints.md":"/docs/developer-guide/big-ints","../../developer-guide/big-ints":"/docs/developer-guide/big-ints","docs/developer-guide/big-ints":"/docs/developer-guide/big-ints","../../developer-guide/converting-data.md":"/docs/developer-guide/converting-data","arrow/docs/developer-guide/converting-data.md":"/docs/developer-guide/converting-data","../../developer-guide/converting-data":"/docs/developer-guide/converting-data","docs/developer-guide/converting-data":"/docs/developer-guide/converting-data","../../developer-guide/data-frame-operations.md":"/docs/developer-guide/data-frame-operations","arrow/docs/developer-guide/data-frame-operations.md":"/docs/developer-guide/data-frame-operations","../../developer-guide/data-frame-operations":"/docs/developer-guide/data-frame-operations","docs/developer-guide/data-frame-operations":"/docs/developer-guide/data-frame-operations","../../developer-guide/data-sources.md":"/docs/developer-guide/data-sources","arrow/docs/developer-guide/data-sources.md":"/docs/developer-guide/data-sources","../../developer-guide/data-sources":"/docs/developer-guide/data-sources","docs/developer-guide/data-sources":"/docs/developer-guide/data-sources","../../developer-guide/data-types.md":"/docs/developer-guide/data-types","arrow/docs/developer-guide/data-types.md":"/docs/developer-guide/data-types","../../developer-guide/data-types":"/docs/developer-guide/data-types","docs/developer-guide/data-types":"/docs/developer-guide/data-types","../../developer-guide/getting-started.md":"/docs/developer-guide/getting-started","arrow/docs/developer-guide/getting-started.md":"/docs/developer-guide/getting-started","../../developer-guide/getting-started":"/docs/developer-guide/getting-started","docs/developer-guide/getting-started":"/docs/developer-guide/getting-started","../../developer-guide/memory-management.md":"/docs/developer-guide/memory-management","arrow/docs/developer-guide/memory-management.md":"/docs/developer-guide/memory-management","../../developer-guide/memory-management":"/docs/developer-guide/memory-management","docs/developer-guide/memory-management":"/docs/developer-guide/memory-management","../../developer-guide/predicates.md":"/docs/developer-guide/predicates","arrow/docs/developer-guide/predicates.md":"/docs/developer-guide/predicates","../../developer-guide/predicates":"/docs/developer-guide/predicates","docs/developer-guide/predicates":"/docs/developer-guide/predicates","../../developer-guide/reading-and-writing.md":"/docs/developer-guide/reading-and-writing","arrow/docs/developer-guide/reading-and-writing.md":"/docs/developer-guide/reading-and-writing","../../developer-guide/reading-and-writing":"/docs/developer-guide/reading-and-writing","docs/developer-guide/reading-and-writing":"/docs/developer-guide/reading-and-writing","../../developer-guide/tables.md":"/docs/developer-guide/tables","arrow/docs/developer-guide/tables.md":"/docs/developer-guide/tables","../../developer-guide/tables":"/docs/developer-guide/tables","docs/developer-guide/tables":"/docs/developer-guide/tables","../../developer-guide/typescript.md":"/docs/developer-guide/typescript","arrow/docs/developer-guide/typescript.md":"/docs/developer-guide/typescript","../../developer-guide/typescript":"/docs/developer-guide/typescript","docs/developer-guide/typescript":"/docs/developer-guide/typescript","":"/docs/api-reference/chunked","arrow/docs/api-reference/chunked.md":"/docs/api-reference/chunked","docs/api-reference/chunked":"/docs/api-reference/chunked"},"slug":"docs/api-reference/chunked","toc":"docs"}}