{"data":{"docBySlug":{"html":"<h1 id=\"reading-and-writing-arrow-data\"><a href=\"#reading-and-writing-arrow-data\" aria-label=\"reading and writing arrow data permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reading and Writing Arrow Data</h1>\n<h2 id=\"about-recordbatches\"><a href=\"#about-recordbatches\" aria-label=\"about recordbatches permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About RecordBatches</h2>\n<p>Arrow tables are typically split into record batches, allowing them to be incrementally loaded or written, and naturally the Arrow API provides classes to facilite this reading.</p>\n<h2 id=\"reading-arrow-data\"><a href=\"#reading-arrow-data\" aria-label=\"reading arrow data permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reading Arrow Data</h2>\n<p>The <code class=\"language-text\">Table</code> class provides a simple <code class=\"language-text\">Table.from</code> convenience method for reading an Arrow formatted data file into Arrow data structures:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import { readFileSync } from &#39;fs&#39;;\nimport { Table } from &#39;apache-arrow&#39;;\nconst arrow = readFileSync(&#39;simple.arrow&#39;);\nconst table = Table.from([arrow]);\nconsole.log(table.toString());</code></pre></div>\n<h3 id=\"using-recordbatchreader-to-read-from-a-data-source\"><a href=\"#using-recordbatchreader-to-read-from-a-data-source\" aria-label=\"using recordbatchreader to read from a data source permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using RecordBatchReader to read from a Data Source</h3>\n<p>To read Arrow tables incrementally, you use the <code class=\"language-text\">RecordBatchReader</code> class.</p>\n<p>If you only have one table in your file (the normal case), then you'll only need one <code class=\"language-text\">RecordBatchReader</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> RecordBatchReader<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>credentials<span class=\"token punctuation\">:</span> <span class=\"token string\">'omit'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token keyword\">await</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> batch <span class=\"token keyword\">of</span> reader<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>batch<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"reading-multiple-tables-from-a-data-source\"><a href=\"#reading-multiple-tables-from-a-data-source\" aria-label=\"reading multiple tables from a data source permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reading Multiple Tables from a Data Source</h3>\n<p>The JavaScript Arrow API supports arrow data streams that contain multiple tables (this is an \"extension\" to the arrow spec). Naturally, each Table comes with its own set of record batches, so to read all batches from all tables in the data source you will need a double loop:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> readers <span class=\"token operator\">=</span> RecordBatchReader<span class=\"token punctuation\">.</span><span class=\"token function\">readAll</span><span class=\"token punctuation\">(</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>credentials<span class=\"token punctuation\">:</span> <span class=\"token string\">'omit'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token keyword\">await</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> reader <span class=\"token keyword\">of</span> readers<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token keyword\">await</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> batch <span class=\"token keyword\">of</span> reader<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>batch<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Note: this code also works if there is only one table in the data source, in which case the outer loop will only execute once.</p>\n<h1 id=\"writing-arrow-data\"><a href=\"#writing-arrow-data\" aria-label=\"writing arrow data permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Writing Arrow Data</h1>\n<p>The <code class=\"language-text\">RecordStreamWriter</code> class allows you to write Arrow <code class=\"language-text\">Table</code> and <code class=\"language-text\">RecordBatch</code> instances to a data source.</p>\n<h2 id=\"using-transform-streams\"><a href=\"#using-transform-streams\" aria-label=\"using transform streams permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using Transform Streams</h2>\n<h3 id=\"connecting-to-node-processes\"><a href=\"#connecting-to-node-processes\" aria-label=\"connecting to node processes permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Connecting to Node Processes</h3>\n<p>A </p>\n<h3 id=\"connecting-to-python-processes\"><a href=\"#connecting-to-python-processes\" aria-label=\"connecting to python processes permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Connecting to Python Processes</h3>\n<p>A more complicated example of using Arrow to go from node -> python -> node:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> AsyncIterable <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ix'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> child <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'event-stream'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> fork <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'child_process'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> RecordBatchStreamWriter <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'apache-arrow'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> compute_degrees_via_gpu_accelerated_sql <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">scriptPath</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">edgeListColumnName</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n    <span class=\"token function\">spawn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'python3'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>scriptPath<span class=\"token punctuation\">,</span> edgeListColumnName<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        env<span class=\"token punctuation\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">,</span>\n        stdio<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'pipe'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pipe'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'inherit'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'compute_degrees.py'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">compute_degrees</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">colName<span class=\"token punctuation\">,</span> recordBatchReaders</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> AsyncIterable\n        <span class=\"token punctuation\">.</span><span class=\"token function\">as</span><span class=\"token punctuation\">(</span>recordBatchReaders<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mergeAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>RecordBatchStreamWriter<span class=\"token punctuation\">.</span><span class=\"token function\">throughNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">compute_degrees_via_gpu_accelerated_sql</span><span class=\"token punctuation\">(</span>colName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> compute_degrees<span class=\"token punctuation\">;</span></code></pre></div>\n<p>This example construct pipes of streams of events and that python process just reads from stdin, does a GPU-dataframe operation, and writes the results to stdout. (This example uses Rx/IxJS style functional streaming pipelines).</p>\n<p><code class=\"language-text\">compute_degrees_via_gpu_accelerated_sql</code> returns a node <code class=\"language-text\">child_process</code> that is also a duplex stream, similar to the <a href=\"https://www.npmjs.com/package/event-stream#child-child_process\"><code class=\"language-text\">event-stream#child()</code> method</a></p>","timeToRead":2,"excerpt":"Reading and Writing Arrow Data About RecordBatches Arrow tables are typically split into record batches, allowing them to be incrementally…","frontmatter":{"title":"Reading and Writing Arrow Data","cover":"cover","category":"docs","tags":["default"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"relativeLinks":{"../../roadmap.md":"/docs/roadmap","arrow/docs/roadmap.md":"/docs/roadmap","../../roadmap":"/docs/roadmap","docs/roadmap":"/docs/roadmap","../../README.md":"/docs","arrow/docs/README.md":"/docs","../..":"/docs","docs":"/docs","../../whats-new.md":"/docs/whats-new","arrow/docs/whats-new.md":"/docs/whats-new","../../whats-new":"/docs/whats-new","docs/whats-new":"/docs/whats-new","../../notes.md":"/docs/notes","arrow/docs/notes.md":"/docs/notes","../../notes":"/docs/notes","docs/notes":"/docs/notes","../big-ints.md":"/docs/developer-guide/big-ints","arrow/docs/developer-guide/big-ints.md":"/docs/developer-guide/big-ints","../big-ints":"/docs/developer-guide/big-ints","docs/developer-guide/big-ints":"/docs/developer-guide/big-ints","../converting-data.md":"/docs/developer-guide/converting-data","arrow/docs/developer-guide/converting-data.md":"/docs/developer-guide/converting-data","../converting-data":"/docs/developer-guide/converting-data","docs/developer-guide/converting-data":"/docs/developer-guide/converting-data","../README.md":"/docs/developer-guide","arrow/docs/developer-guide/README.md":"/docs/developer-guide","..":"/docs/developer-guide","docs/developer-guide":"/docs/developer-guide","../data-sources.md":"/docs/developer-guide/data-sources","arrow/docs/developer-guide/data-sources.md":"/docs/developer-guide/data-sources","../data-sources":"/docs/developer-guide/data-sources","docs/developer-guide/data-sources":"/docs/developer-guide/data-sources","../data-types.md":"/docs/developer-guide/data-types","arrow/docs/developer-guide/data-types.md":"/docs/developer-guide/data-types","../data-types":"/docs/developer-guide/data-types","docs/developer-guide/data-types":"/docs/developer-guide/data-types","../getting-started.md":"/docs/developer-guide/getting-started","arrow/docs/developer-guide/getting-started.md":"/docs/developer-guide/getting-started","../getting-started":"/docs/developer-guide/getting-started","docs/developer-guide/getting-started":"/docs/developer-guide/getting-started","../predicates.md":"/docs/developer-guide/predicates","arrow/docs/developer-guide/predicates.md":"/docs/developer-guide/predicates","../predicates":"/docs/developer-guide/predicates","docs/developer-guide/predicates":"/docs/developer-guide/predicates","../memory-management.md":"/docs/developer-guide/memory-management","arrow/docs/developer-guide/memory-management.md":"/docs/developer-guide/memory-management","../memory-management":"/docs/developer-guide/memory-management","docs/developer-guide/memory-management":"/docs/developer-guide/memory-management","../tables.md":"/docs/developer-guide/tables","arrow/docs/developer-guide/tables.md":"/docs/developer-guide/tables","../tables":"/docs/developer-guide/tables","docs/developer-guide/tables":"/docs/developer-guide/tables","":"/docs/developer-guide/reading-and-writing","arrow/docs/developer-guide/reading-and-writing.md":"/docs/developer-guide/reading-and-writing","docs/developer-guide/reading-and-writing":"/docs/developer-guide/reading-and-writing","../typescript.md":"/docs/developer-guide/typescript","arrow/docs/developer-guide/typescript.md":"/docs/developer-guide/typescript","../typescript":"/docs/developer-guide/typescript","docs/developer-guide/typescript":"/docs/developer-guide/typescript","../../api-reference/data-frame.md":"/docs/api-reference/data-frame","arrow/docs/api-reference/data-frame.md":"/docs/api-reference/data-frame","../../api-reference/data-frame":"/docs/api-reference/data-frame","docs/api-reference/data-frame":"/docs/api-reference/data-frame","../../api-reference/column.md":"/docs/api-reference/column","arrow/docs/api-reference/column.md":"/docs/api-reference/column","../../api-reference/column":"/docs/api-reference/column","docs/api-reference/column":"/docs/api-reference/column","../../api-reference/README.md":"/docs/api-reference","arrow/docs/api-reference/README.md":"/docs/api-reference","../../api-reference":"/docs/api-reference","docs/api-reference":"/docs/api-reference","../../api-reference/field.md":"/docs/api-reference/field","arrow/docs/api-reference/field.md":"/docs/api-reference/field","../../api-reference/field":"/docs/api-reference/field","docs/api-reference/field":"/docs/api-reference/field","../data-frame-operations.md":"/docs/developer-guide/data-frame-operations","arrow/docs/developer-guide/data-frame-operations.md":"/docs/developer-guide/data-frame-operations","../data-frame-operations":"/docs/developer-guide/data-frame-operations","docs/developer-guide/data-frame-operations":"/docs/developer-guide/data-frame-operations","../../api-reference/dictionary.md":"/docs/api-reference/dictionary","arrow/docs/api-reference/dictionary.md":"/docs/api-reference/dictionary","../../api-reference/dictionary":"/docs/api-reference/dictionary","docs/api-reference/dictionary":"/docs/api-reference/dictionary","../../api-reference/predicates.md":"/docs/api-reference/predicates","arrow/docs/api-reference/predicates.md":"/docs/api-reference/predicates","../../api-reference/predicates":"/docs/api-reference/predicates","docs/api-reference/predicates":"/docs/api-reference/predicates","../../api-reference/record-batch-reader.md":"/docs/api-reference/record-batch-reader","arrow/docs/api-reference/record-batch-reader.md":"/docs/api-reference/record-batch-reader","../../api-reference/record-batch-reader":"/docs/api-reference/record-batch-reader","docs/api-reference/record-batch-reader":"/docs/api-reference/record-batch-reader","../../api-reference/record-batch.md":"/docs/api-reference/record-batch","arrow/docs/api-reference/record-batch.md":"/docs/api-reference/record-batch","../../api-reference/record-batch":"/docs/api-reference/record-batch","docs/api-reference/record-batch":"/docs/api-reference/record-batch","../../api-reference/row.md":"/docs/api-reference/row","arrow/docs/api-reference/row.md":"/docs/api-reference/row","../../api-reference/row":"/docs/api-reference/row","docs/api-reference/row":"/docs/api-reference/row","../../api-reference/schema.md":"/docs/api-reference/schema","arrow/docs/api-reference/schema.md":"/docs/api-reference/schema","../../api-reference/schema":"/docs/api-reference/schema","docs/api-reference/schema":"/docs/api-reference/schema","../../api-reference/struct-vector.md":"/docs/api-reference/struct-vector","arrow/docs/api-reference/struct-vector.md":"/docs/api-reference/struct-vector","../../api-reference/struct-vector":"/docs/api-reference/struct-vector","docs/api-reference/struct-vector":"/docs/api-reference/struct-vector","../../api-reference/data.md":"/docs/api-reference/data","arrow/docs/api-reference/data.md":"/docs/api-reference/data","../../api-reference/data":"/docs/api-reference/data","docs/api-reference/data":"/docs/api-reference/data","../../api-reference/vector.md":"/docs/api-reference/vector","arrow/docs/api-reference/vector.md":"/docs/api-reference/vector","../../api-reference/vector":"/docs/api-reference/vector","docs/api-reference/vector":"/docs/api-reference/vector","../../api-reference/types.md":"/docs/api-reference/types","arrow/docs/api-reference/types.md":"/docs/api-reference/types","../../api-reference/types":"/docs/api-reference/types","docs/api-reference/types":"/docs/api-reference/types","../../api-reference/chunked.md":"/docs/api-reference/chunked","arrow/docs/api-reference/chunked.md":"/docs/api-reference/chunked","../../api-reference/chunked":"/docs/api-reference/chunked","docs/api-reference/chunked":"/docs/api-reference/chunked","../../api-reference/table.md":"/docs/api-reference/table","arrow/docs/api-reference/table.md":"/docs/api-reference/table","../../api-reference/table":"/docs/api-reference/table","docs/api-reference/table":"/docs/api-reference/table","../../api-reference/record-batch-writer.md":"/docs/api-reference/record-batch-writer","arrow/docs/api-reference/record-batch-writer.md":"/docs/api-reference/record-batch-writer","../../api-reference/record-batch-writer":"/docs/api-reference/record-batch-writer","docs/api-reference/record-batch-writer":"/docs/api-reference/record-batch-writer","../../api-reference/vectors.md":"/docs/api-reference/vectors","arrow/docs/api-reference/vectors.md":"/docs/api-reference/vectors","../../api-reference/vectors":"/docs/api-reference/vectors","docs/api-reference/vectors":"/docs/api-reference/vectors"},"slug":"docs/developer-guide/reading-and-writing","toc":"docs"}}