{"data":{"docBySlug":{"html":"<h1 id=\"table\"><a href=\"#table\" aria-label=\"table permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table</h1>\n<p>Logical table as sequence of chunked arrays</p>\n<h2 id=\"overview\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h2>\n<p>The JavaScript <code class=\"language-text\">Table</code> class is not part of the Apache Arrow specification as such, but is rather a tool to allow you to work with multiple record batches and array pieces as a single logical dataset.</p>\n<p>As a relevant example, we may receive multiple small record batches in a socket stream, then need to concatenate them into contiguous memory for use in NumPy or pandas. The Table object makes this efficient without requiring additional memory copying.</p>\n<p>A Tableâ€™s columns are instances of <code class=\"language-text\">Column</code>, which is a container for one or more arrays of the same type.</p>\n<h2 id=\"usage\"><a href=\"#usage\" aria-label=\"usage permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usage</h2>\n<p><code class=\"language-text\">Table.new()</code> accepts an <code class=\"language-text\">Object</code> of <code class=\"language-text\">Columns</code> or <code class=\"language-text\">Vectors</code>, where the keys will be used as the field names for the <code class=\"language-text\">Schema</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> i32s <span class=\"token operator\">=</span> Int32Vector<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> f32s <span class=\"token operator\">=</span> Float32Vector<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">.3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> table <span class=\"token operator\">=</span> Table<span class=\"token punctuation\">.</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> i32<span class=\"token punctuation\">:</span> i32s<span class=\"token punctuation\">,</span> f32<span class=\"token punctuation\">:</span> f32s <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">.</span>schema<span class=\"token punctuation\">.</span>fields<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'i32'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>It also accepts a a list of Vectors with an optional list of names or\nFields for the resulting Schema. If the list is omitted or a name is\nmissing, the numeric index of each Vector will be used as the name:</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> i32s <span class=\"token operator\">=</span> Int32Vector<span class=\"token punctuation\">.</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> f32s <span class=\"token operator\">=</span> Float32Vector<span class=\"token punctuation\">.</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">.3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> table <span class=\"token operator\">=</span> Table<span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>i32s<span class=\"token punctuation\">,</span> f32s<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'i32'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">.</span>schema<span class=\"token punctuation\">.</span>fields<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'i32'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">.</span>schema<span class=\"token punctuation\">.</span>fields<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>If the supplied arguments are <code class=\"language-text\">Column</code> instances, <code class=\"language-text\">Table.new</code> will infer the <code class=\"language-text\">Schema</code> from the <code class=\"language-text\">Column</code>s:</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> i32s <span class=\"token operator\">=</span> Column<span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token string\">'i32'</span><span class=\"token punctuation\">,</span> Int32Vector<span class=\"token punctuation\">.</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> f32s <span class=\"token operator\">=</span> Column<span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token string\">'f32'</span><span class=\"token punctuation\">,</span> Float32Vector<span class=\"token punctuation\">.</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">.3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> table <span class=\"token operator\">=</span> Table<span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span>i32s<span class=\"token punctuation\">,</span> f32s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">.</span>schema<span class=\"token punctuation\">.</span>fields<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'i32'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">.</span>schema<span class=\"token punctuation\">.</span>fields<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'f32'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>If the supplied Vector or Column lengths are unequal, <code class=\"language-text\">Table.new</code> will\nextend the lengths of the shorter Columns, allocating additional bytes\nto represent the additional null slots. The memory required to allocate\nthese additional bitmaps can be computed as:</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">let</span> additionalBytes <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> vec <span class=\"token keyword\">in</span> shorter_vectors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n additionalBytes <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>longestLength <span class=\"token operator\">-</span> vec<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">63</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token operator\">~</span><span class=\"token number\">63</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>For example, an additional null bitmap for one million null values would require <code class=\"language-text\">125,000</code> bytes (<code class=\"language-text\">((1e6 + 63) &amp; ~63) &gt;&gt; 3</code>), or approx. <code class=\"language-text\">0.11MiB</code></p>\n<h2 id=\"inheritance\"><a href=\"#inheritance\" aria-label=\"inheritance permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Inheritance</h2>\n<p><code class=\"language-text\">Table</code> extends Chunked</p>\n<h2 id=\"static-methods\"><a href=\"#static-methods\" aria-label=\"static methods permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Static Methods</h2>\n<h3 id=\"tableempty--table\"><a href=\"#tableempty--table\" aria-label=\"tableempty  table permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table.empty() : Table</h3>\n<p>Creates an empty table</p>\n<h3 id=\"tablefrom--table\"><a href=\"#tablefrom--table\" aria-label=\"tablefrom  table permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table.from() : Table</h3>\n<p>Creates an empty table</p>\n<h3 id=\"tablefromsource-recordbatchreader-table\"><a href=\"#tablefromsource-recordbatchreader-table\" aria-label=\"tablefromsource recordbatchreader table permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table.from(source: RecordBatchReader): Table</h3>\n<h3 id=\"tablefromsource-promiserecordbatchreader-promisetable\"><a href=\"#tablefromsource-promiserecordbatchreader-promisetable\" aria-label=\"tablefromsource promiserecordbatchreader promisetable permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table.from(source: Promise<RecordBatchReader>): Promise<Table></h3>\n<h3 id=\"tablefromsource-any--table\"><a href=\"#tablefromsource-any--table\" aria-label=\"tablefromsource any  table permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table.from(source?: any) : Table</h3>\n<h3 id=\"tablefromasyncsource-importipcreaderfromargs-promisetable\"><a href=\"#tablefromasyncsource-importipcreaderfromargs-promisetable\" aria-label=\"tablefromasyncsource importipcreaderfromargs promisetable permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table.fromAsync(source: import('./ipc/reader').FromArgs): Promise<Table></h3>\n<h3 id=\"tablefromvectorsvectors-any-names-string--table\"><a href=\"#tablefromvectorsvectors-any-names-string--table\" aria-label=\"tablefromvectorsvectors any names string  table permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table.fromVectors(vectors: any[], names?: String[]) : Table</h3>\n<h3 id=\"tablefromstructstruct-vector--table\"><a href=\"#tablefromstructstruct-vector--table\" aria-label=\"tablefromstructstruct vector  table permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table.fromStruct(struct: Vector) : Table</h3>\n<h3 id=\"tablenewcolumns-object\"><a href=\"#tablenewcolumns-object\" aria-label=\"tablenewcolumns object permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table.new(columns: Object)</h3>\n<h3 id=\"tablenewcolumns\"><a href=\"#tablenewcolumns\" aria-label=\"tablenewcolumns permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table.new(...columns)</h3>\n<h3 id=\"tablenewvectors-vector-names-string\"><a href=\"#tablenewvectors-vector-names-string\" aria-label=\"tablenewvectors vector names string permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table.new(vectors: Vector[], names: String[])</h3>\n<p>Type safe constructors. Functionally equivalent to calling <code class=\"language-text\">new Table()</code> with the same arguments, however if using Typescript using the <code class=\"language-text\">new</code> method instead will ensure that types inferred from the arguments \"flow through\" into the return Table type.</p>\n<h2 id=\"members\"><a href=\"#members\" aria-label=\"members permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Members</h2>\n<h3 id=\"schema-readonly\"><a href=\"#schema-readonly\" aria-label=\"schema readonly permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>schema (readonly)</h3>\n<p>The <code class=\"language-text\">Schema</code> of this table.</p>\n<h3 id=\"length--number-readonly\"><a href=\"#length--number-readonly\" aria-label=\"length  number readonly permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>length : Number (readonly)</h3>\n<p>The number of rows in this table.</p>\n<p>TBD: this does not consider filters</p>\n<h3 id=\"chunks--recordbatch-readonly\"><a href=\"#chunks--recordbatch-readonly\" aria-label=\"chunks  recordbatch readonly permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>chunks : RecordBatch[] (readonly)</h3>\n<p>The list of chunks in this table.</p>\n<h3 id=\"numcols--number-readonly\"><a href=\"#numcols--number-readonly\" aria-label=\"numcols  number readonly permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>numCols : Number (readonly)</h3>\n<p>The number of columns in this table.</p>\n<h2 id=\"methods\"><a href=\"#methods\" aria-label=\"methods permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Methods</h2>\n<h3 id=\"constructorbatches-recordbatch\"><a href=\"#constructorbatches-recordbatch\" aria-label=\"constructorbatches recordbatch permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>constructor(batches: RecordBatch[])</h3>\n<p>The schema will be inferred from the record batches.</p>\n<h3 id=\"constructorbatches-recordbatch-1\"><a href=\"#constructorbatches-recordbatch-1\" aria-label=\"constructorbatches recordbatch 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>constructor(...batches: RecordBatch[])</h3>\n<p>The schema will be inferred from the record batches.</p>\n<h3 id=\"constructorschema-schema-batches-recordbatch\"><a href=\"#constructorschema-schema-batches-recordbatch\" aria-label=\"constructorschema schema batches recordbatch permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>constructor(schema: Schema, batches: RecordBatch[])</h3>\n<h3 id=\"constructorschema-schema-batches-recordbatch-1\"><a href=\"#constructorschema-schema-batches-recordbatch-1\" aria-label=\"constructorschema schema batches recordbatch 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>constructor(schema: Schema, ...batches: RecordBatch[])</h3>\n<h3 id=\"constructorargs-any\"><a href=\"#constructorargs-any\" aria-label=\"constructorargs any permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>constructor(...args: any[])</h3>\n<p>Create a new <code class=\"language-text\">Table</code> from a collection of <code class=\"language-text\">Columns</code> or <code class=\"language-text\">Vectors</code>, with an optional list of names or <code class=\"language-text\">Fields</code>.</p>\n<p>TBD</p>\n<h3 id=\"clonechunks\"><a href=\"#clonechunks\" aria-label=\"clonechunks permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>clone(chunks?:)</h3>\n<p>Returns a new copy of this table.</p>\n<h3 id=\"getcolumnatindex-number-column--null\"><a href=\"#getcolumnatindex-number-column--null\" aria-label=\"getcolumnatindex number column  null permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>getColumnAt(index: number): Column | null</h3>\n<p>Gets a column by index.</p>\n<h3 id=\"getcolumnname-string-column--null\"><a href=\"#getcolumnname-string-column--null\" aria-label=\"getcolumnname string column  null permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>getColumn(name: String): Column | null</h3>\n<p>Gets a column by name</p>\n<h3 id=\"getcolumnindexname-string--number--null\"><a href=\"#getcolumnindexname-string--number--null\" aria-label=\"getcolumnindexname string  number  null permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>getColumnIndex(name: String) : Number | null</h3>\n<p>Returns the index of the column with name <code class=\"language-text\">name</code>.</p>\n<h3 id=\"getchildatindex-number-column--null\"><a href=\"#getchildatindex-number-column--null\" aria-label=\"getchildatindex number column  null permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>getChildAt(index: number): Column | null</h3>\n<p>TBD</p>\n<h3 id=\"serializeencoding--binary-stream--true--uint8array\"><a href=\"#serializeencoding--binary-stream--true--uint8array\" aria-label=\"serializeencoding  binary stream  true  uint8array permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>serialize(encoding = 'binary', stream = true) : Uint8Array</h3>\n<p>Returns a <code class=\"language-text\">Uint8Array</code> that contains an encoding of all the data in the table.</p>\n<p>Note: Passing the returned data back into <code class=\"language-text\">Table.from()</code> creates a \"deep clone\" of the table.</p>\n<h3 id=\"count-number\"><a href=\"#count-number\" aria-label=\"count number permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>count(): number</h3>\n<p>TBD - Returns the number of elements.</p>\n<h3 id=\"selectcolumnnames-string--table\"><a href=\"#selectcolumnnames-string--table\" aria-label=\"selectcolumnnames string  table permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>select(...columnNames: string[]) : Table</h3>\n<p>Returns a new Table with the specified subset of columns, in the specified order.</p>\n<h3 id=\"countbyname--col--string--table\"><a href=\"#countbyname--col--string--table\" aria-label=\"countbyname  col  string  table permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>countBy(name : Col | String) : Table</h3>\n<p>Returns a new Table that contains two columns (<code class=\"language-text\">values</code> and <code class=\"language-text\">counts</code>).</p>","timeToRead":5,"excerpt":"Table Logical table as sequence of chunked arrays Overview The JavaScript   class is not part of the Apache Arrow specification as such, butâ€¦","frontmatter":{"title":"Table","cover":"cover","category":"docs","tags":["default"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"relativeLinks":{"../../README.md":"/docs","arrow/docs/README.md":"/docs","../..":"/docs","docs":"/docs","../../notes.md":"/docs/notes","arrow/docs/notes.md":"/docs/notes","../../notes":"/docs/notes","docs/notes":"/docs/notes","../../roadmap.md":"/docs/roadmap","arrow/docs/roadmap.md":"/docs/roadmap","../../roadmap":"/docs/roadmap","docs/roadmap":"/docs/roadmap","../../whats-new.md":"/docs/whats-new","arrow/docs/whats-new.md":"/docs/whats-new","../../whats-new":"/docs/whats-new","docs/whats-new":"/docs/whats-new","../README.md":"/docs/api-reference","arrow/docs/api-reference/README.md":"/docs/api-reference","..":"/docs/api-reference","docs/api-reference":"/docs/api-reference","../column.md":"/docs/api-reference/column","arrow/docs/api-reference/column.md":"/docs/api-reference/column","../column":"/docs/api-reference/column","docs/api-reference/column":"/docs/api-reference/column","../data-frame.md":"/docs/api-reference/data-frame","arrow/docs/api-reference/data-frame.md":"/docs/api-reference/data-frame","../data-frame":"/docs/api-reference/data-frame","docs/api-reference/data-frame":"/docs/api-reference/data-frame","../data.md":"/docs/api-reference/data","arrow/docs/api-reference/data.md":"/docs/api-reference/data","../data":"/docs/api-reference/data","docs/api-reference/data":"/docs/api-reference/data","../dictionary.md":"/docs/api-reference/dictionary","arrow/docs/api-reference/dictionary.md":"/docs/api-reference/dictionary","../dictionary":"/docs/api-reference/dictionary","docs/api-reference/dictionary":"/docs/api-reference/dictionary","../field.md":"/docs/api-reference/field","arrow/docs/api-reference/field.md":"/docs/api-reference/field","../field":"/docs/api-reference/field","docs/api-reference/field":"/docs/api-reference/field","../predicates.md":"/docs/api-reference/predicates","arrow/docs/api-reference/predicates.md":"/docs/api-reference/predicates","../predicates":"/docs/api-reference/predicates","docs/api-reference/predicates":"/docs/api-reference/predicates","../record-batch-reader.md":"/docs/api-reference/record-batch-reader","arrow/docs/api-reference/record-batch-reader.md":"/docs/api-reference/record-batch-reader","../record-batch-reader":"/docs/api-reference/record-batch-reader","docs/api-reference/record-batch-reader":"/docs/api-reference/record-batch-reader","../record-batch-writer.md":"/docs/api-reference/record-batch-writer","arrow/docs/api-reference/record-batch-writer.md":"/docs/api-reference/record-batch-writer","../record-batch-writer":"/docs/api-reference/record-batch-writer","docs/api-reference/record-batch-writer":"/docs/api-reference/record-batch-writer","../record-batch.md":"/docs/api-reference/record-batch","arrow/docs/api-reference/record-batch.md":"/docs/api-reference/record-batch","../record-batch":"/docs/api-reference/record-batch","docs/api-reference/record-batch":"/docs/api-reference/record-batch","../row.md":"/docs/api-reference/row","arrow/docs/api-reference/row.md":"/docs/api-reference/row","../row":"/docs/api-reference/row","docs/api-reference/row":"/docs/api-reference/row","../struct-vector.md":"/docs/api-reference/struct-vector","arrow/docs/api-reference/struct-vector.md":"/docs/api-reference/struct-vector","../struct-vector":"/docs/api-reference/struct-vector","docs/api-reference/struct-vector":"/docs/api-reference/struct-vector","../schema.md":"/docs/api-reference/schema","arrow/docs/api-reference/schema.md":"/docs/api-reference/schema","../schema":"/docs/api-reference/schema","docs/api-reference/schema":"/docs/api-reference/schema","":"/docs/api-reference/table","arrow/docs/api-reference/table.md":"/docs/api-reference/table","docs/api-reference/table":"/docs/api-reference/table","../types.md":"/docs/api-reference/types","arrow/docs/api-reference/types.md":"/docs/api-reference/types","../types":"/docs/api-reference/types","docs/api-reference/types":"/docs/api-reference/types","../vector.md":"/docs/api-reference/vector","arrow/docs/api-reference/vector.md":"/docs/api-reference/vector","../vector":"/docs/api-reference/vector","docs/api-reference/vector":"/docs/api-reference/vector","../vectors.md":"/docs/api-reference/vectors","arrow/docs/api-reference/vectors.md":"/docs/api-reference/vectors","../vectors":"/docs/api-reference/vectors","docs/api-reference/vectors":"/docs/api-reference/vectors","../../developer-guide/README.md":"/docs/developer-guide","arrow/docs/developer-guide/README.md":"/docs/developer-guide","../../developer-guide":"/docs/developer-guide","docs/developer-guide":"/docs/developer-guide","../../developer-guide/big-ints.md":"/docs/developer-guide/big-ints","arrow/docs/developer-guide/big-ints.md":"/docs/developer-guide/big-ints","../../developer-guide/big-ints":"/docs/developer-guide/big-ints","docs/developer-guide/big-ints":"/docs/developer-guide/big-ints","../../developer-guide/converting-data.md":"/docs/developer-guide/converting-data","arrow/docs/developer-guide/converting-data.md":"/docs/developer-guide/converting-data","../../developer-guide/converting-data":"/docs/developer-guide/converting-data","docs/developer-guide/converting-data":"/docs/developer-guide/converting-data","../../developer-guide/data-frame-operations.md":"/docs/developer-guide/data-frame-operations","arrow/docs/developer-guide/data-frame-operations.md":"/docs/developer-guide/data-frame-operations","../../developer-guide/data-frame-operations":"/docs/developer-guide/data-frame-operations","docs/developer-guide/data-frame-operations":"/docs/developer-guide/data-frame-operations","../../developer-guide/data-sources.md":"/docs/developer-guide/data-sources","arrow/docs/developer-guide/data-sources.md":"/docs/developer-guide/data-sources","../../developer-guide/data-sources":"/docs/developer-guide/data-sources","docs/developer-guide/data-sources":"/docs/developer-guide/data-sources","../../developer-guide/data-types.md":"/docs/developer-guide/data-types","arrow/docs/developer-guide/data-types.md":"/docs/developer-guide/data-types","../../developer-guide/data-types":"/docs/developer-guide/data-types","docs/developer-guide/data-types":"/docs/developer-guide/data-types","../../developer-guide/getting-started.md":"/docs/developer-guide/getting-started","arrow/docs/developer-guide/getting-started.md":"/docs/developer-guide/getting-started","../../developer-guide/getting-started":"/docs/developer-guide/getting-started","docs/developer-guide/getting-started":"/docs/developer-guide/getting-started","../../developer-guide/memory-management.md":"/docs/developer-guide/memory-management","arrow/docs/developer-guide/memory-management.md":"/docs/developer-guide/memory-management","../../developer-guide/memory-management":"/docs/developer-guide/memory-management","docs/developer-guide/memory-management":"/docs/developer-guide/memory-management","../../developer-guide/predicates.md":"/docs/developer-guide/predicates","arrow/docs/developer-guide/predicates.md":"/docs/developer-guide/predicates","../../developer-guide/predicates":"/docs/developer-guide/predicates","docs/developer-guide/predicates":"/docs/developer-guide/predicates","../../developer-guide/reading-and-writing.md":"/docs/developer-guide/reading-and-writing","arrow/docs/developer-guide/reading-and-writing.md":"/docs/developer-guide/reading-and-writing","../../developer-guide/reading-and-writing":"/docs/developer-guide/reading-and-writing","docs/developer-guide/reading-and-writing":"/docs/developer-guide/reading-and-writing","../../developer-guide/tables.md":"/docs/developer-guide/tables","arrow/docs/developer-guide/tables.md":"/docs/developer-guide/tables","../../developer-guide/tables":"/docs/developer-guide/tables","docs/developer-guide/tables":"/docs/developer-guide/tables","../../developer-guide/typescript.md":"/docs/developer-guide/typescript","arrow/docs/developer-guide/typescript.md":"/docs/developer-guide/typescript","../../developer-guide/typescript":"/docs/developer-guide/typescript","docs/developer-guide/typescript":"/docs/developer-guide/typescript","../chunked.md":"/docs/api-reference/chunked","arrow/docs/api-reference/chunked.md":"/docs/api-reference/chunked","../chunked":"/docs/api-reference/chunked","docs/api-reference/chunked":"/docs/api-reference/chunked"},"slug":"docs/api-reference/table","toc":"docs"}}